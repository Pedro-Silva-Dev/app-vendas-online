{"version":3,"sources":["./src/app/categoria/categoria-form/categoria-form.component.ts","./src/app/categoria/categoria-form/categoria-form.component.html","./src/app/categoria/categoria-routing.module.ts","./src/app/categoria/categoria.component.ts","./src/app/categoria/categoria.component.html","./src/app/categoria/categoria.module.ts","./src/app/categoria/models/categoria.model.ts"],"names":[],"mappings":"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","file":"categoria-categoria-module.js","sourcesContent":["import { isNotNull } from './../../shared/validations/validations';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpResponse } from '@angular/common/http';\nimport { CategoriaService } from './../categoria.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Categoria } from '../models/categoria.model';\n\n@Component({\n  selector: 'app-categoria-form',\n  templateUrl: './categoria-form.component.html',\n  styleUrls: ['./categoria-form.component.css']\n})\nexport class CategoriaFormComponent implements OnInit {\n\n  @Input() categoria: Categoria;\n\n  @Output() eventFechar: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() eventReload: EventEmitter<Categoria> = new EventEmitter<Categoria>();\n\n  categoriaForm: FormGroup;\n  processando: boolean;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _categoriaService: CategoriaService,\n    private _toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.criarCategoriaForm();\n  }\n\n  /**\n   * Responsavel por criar o formulario para cadastrar ou atualizar uma categoria.\n   */\n  criarCategoriaForm(){\n    this.categoriaForm = this._formBuilder.group({\n      id: [this.categoria.id],\n      nome: [this.categoria.nome, [Validators.required, isNotNull]]\n    });\n  }\n\n  /**\n   * Fecha o modal de cadastro ou atualização de categoria.\n   */\n  fechar(){\n    this.eventFechar.emit(true);\n  }\n\n  /**\n   * Executa o metodo de atualizar caso a categoria ja exista, caso contrario executa o de cadastro.\n   */\n  salvar(){\n    if(this.categoriaForm.valid){\n      this.processando = true;\n      if(this.categoria.id){\n        this.atualizar();\n      }else{\n        this.cadastrar();\n      }\n    }\n  }\n\n  /**\n   * Atualiza os dados de uma categoria existente.\n   */\n  atualizar(){\n    this._categoriaService.atualizar(this.categoriaForm.value).subscribe(\n      (res: HttpResponse<Categoria>) =>{\n        if(res.status == 200){\n         if(res.body.id){\n          this._toastrService.success(`Categoria atualizada com sucesso!`);\n          this.eventReload.emit(res.body);\n          this.eventFechar.emit(true);\n         }else{\n          this._toastrService.warning(`Ocorreu um erro ao tentar obter os resultados da atualização, por favor tente novamente.`);\n          this.processando = false;\n         }\n        }else{\n          this._toastrService.warning(`Ocorreu um erro na tentativa de atualização, por favor tente novamente.`);\n          this.processando = false;\n        }\n      }, err => {\n        this._toastrService.error(`Ocorreu um erro no processo de atualização, por favor contate o suporte.`);\n        this.processando = false;\n      });\n  }\n\n  /**\n   * Cadastra uma nova categoria.\n   */\n  cadastrar(){\n    this._categoriaService.cadastrar(this.categoriaForm.value).subscribe(\n      (res: HttpResponse<Categoria>) =>{\n        if(res.status == 201){\n          if(res.body.id){\n            this._toastrService.success(`Categoria cadastrada com sucesso!`);\n            this.eventReload.emit(res.body);\n            this.eventFechar.emit(true);\n          }else{\n            this._toastrService.warning(`Ocorreu um erro ao tentar obter os resultados do cadastro, por favor tente novamente.`);\n            this.processando = false;\n          }\n        }else{\n          this._toastrService.warning(`Ocorreu um erro na tentativa de cadastro, por favor tente novamente.`);\n          this.processando = false;\n        }\n      }, err => {\n        this._toastrService.error(`Ocorreu um erro no processo de cadastro, por favor contate o suporte.`);\n        this.processando = false;\n      });\n  }\n\n  /**\n   * Verifica se o campo foi alterado e se está valido.\n   * @param campo\n   */\n  validarCampo(campo: string): boolean{\n    return this.categoriaForm.get(campo).invalid && this.categoriaForm.touched;\n  }\n\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{categoria?.id ? 'Atualizar' : 'Cadastrar'}} Categoria</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"fechar()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<form [formGroup]=\"categoriaForm\" (submit)=\"salvar()\">\n  <div class=\"modal-body\">\n    <div class=\"form-group\">\n      <label for=\"nome\">Nome<span class=\"text-danger\">*</span></label>\n      <input formControlName=\"nome\" type=\"text\" id=\"nome\" placeholder=\"Nome da categoria\" [ngClass]=\"{'form-control': true, 'is-invalid': validarCampo('nome')}\">\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button (click)=\"fechar()\" class=\"btn btn-outline-secondary\" id=\"voltar\" type=\"button\">Voltar</button>\n    <button [disabled]=\"categoriaForm.invalid\" class=\"btn btn-outline-primary\" id=\"cadastrar\" type=\"submit\"><span *ngIf=\"!processando; else spinner\">{{categoria?.id ? 'Atualizar' : 'Cadastrar'}}</span></button>\n  </div>\n\n</form>\n\n\n<ng-template #spinner>\n  <app-spinner></app-spinner>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoriaComponent } from './categoria.component';\n\nconst routes: Routes = [{ path: '', component: CategoriaComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriaRoutingModule { }\n","import { ToastrService } from 'ngx-toastr';\nimport { HttpResponse } from '@angular/common/http';\nimport { CategoriaService } from './categoria.service';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Categoria } from './models/categoria.model';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-categoria',\n  templateUrl: './categoria.component.html',\n  styleUrls: ['./categoria.component.css']\n})\nexport class CategoriaComponent implements OnInit {\n\n  pagina: number = 1;\n  tamanho: number = 20;\n  totalItems:number = 0;\n\n  categorias: Categoria[];\n  categoria: Categoria;\n  modalRef: BsModalRef;\n\n  constructor(\n    private _categoriaService: CategoriaService,\n    private _modalService: BsModalService,\n    private _toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.obterPaginaCategoria(this.pagina);\n  }\n\n  /**\n   * Obtem uma pagina com os dados de categoria.\n   */\n  obterPaginaCategoria(pagina: number){\n    this._categoriaService.obterPaginaCategoria(pagina, this.tamanho).subscribe(\n      (res: HttpResponse<Categoria[]>) => {\n        if(res.status == 200){\n          this.categorias = res.body;\n          this.totalItems = Number.parseInt(res.headers.get('X-Total-Count'));\n        }\n      });\n  }\n\n  /**\n   * Exibe o modal responsavel por cadastrar ou atualizar a categoria.\n   * @param template\n   * @param categoria\n   */\n  exibirCategoriaForm(template: TemplateRef<any>, categoria?: Categoria){\n    this.categoria = new Categoria();\n    if(categoria){\n      this.categoria = categoria;\n    }\n    this.modalRef = this._modalService.show(template, {ignoreBackdropClick: true, class: 'modal-md'});\n  }\n\n  /**\n   * Fecha o modal de cadastro ou atualização.\n   */\n  fechar(){\n    this.modalRef.hide();\n  }\n\n  /**\n   * Exclui uma categoria.\n   */\n  excluir(id: number){\n    this._categoriaService.excluir(id).subscribe(\n      (res: HttpResponse<void>) => {\n        if(res.status == 200){\n          this._toastrService.success(`Categoria excluida com sucesso!`);\n          this.categorias = this.categorias.filter(c => c.id != id);\n        }else{\n          this._toastrService.warning(`Ocorreu um erro ao tentar excluir a categoria, por favor tente novamente.`);\n        }\n      }, err => {\n        this._toastrService.error(`Ocorreu um erro ao tentar excluir a categoria, por favor entre em contato com o suporte.`);\n      });\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-lg-12 mt-4 d-flex justify-content-between\">\n      <h3 class=\"title\">Categorias</h3>\n      <button (click)=\"exibirCategoriaForm(categoriaForm)\" class=\"btn btn-outline-primary\" type=\"button\">+ Nova Categoria</button>\n    </div>\n  </div>\n  <hr>\n  <div class=\"row\">\n    <div *ngFor=\"let categoria of categorias\" class=\"col-lg-2 col-md-4\">\n      <div class=\"ui-card p-3\">\n        <div class=\"d-flex justify-content-between\">\n          <div class=\"mt-1\">\n            <h4 class=\"title pl-1\">{{categoria.nome}}</h4>\n          </div>\n          <div class=\"d-flex align-items-center pl-1 cursor-pointer\">\n            <div class=\"btn-group\" dropdown>\n              <span class=\"material-icons\" dropdownToggle>more_vert</span>\n              <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"button-animated\">\n                <li (click)=\"exibirCategoriaForm(categoriaForm, categoria)\" role=\"menuitem\"><a class=\"dropdown-item\" href=\"javascript:void(0)\">Editar</a></li>\n                <li [swal]=\"deleteSwal\" (confirm)=\"excluir(categoria.id)\" role=\"menuitem\"><a class=\"dropdown-item\" href=\"javascript:void(0)\">Excluir</a></li>\n              </ul>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!categorias?.length\" class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"alert alert-info\" role=\"alert\">\n        Nenhuma informação encontrada.\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"(totalItems > tamanho)\" class=\"row\">\n    <div class=\"col-xs-12 col-12 mt-3\">\n      <pagination [totalItems]=\"totalItems\" nextText=\"Avançar\" previousText=\"Voltar\" [itemsPerPage]=\"tamanho\" (pageChanged)=\"obterPaginaCategoria($event.page)\" [(ngModel)]=\"pagina\"></pagination>\n    </div>\n  </div>\n</div>\n\n<ng-template #categoriaForm>\n  <app-categoria-form (eventFechar)=\"fechar()\" (eventReload)=\"obterPaginaCategoria(this.pagina)\" [categoria]=\"categoria\"></app-categoria-form>\n</ng-template>\n\n<swal\n  #deleteSwal\n  title=\"Realmente deseja excluir essa categoria?\"\n  text=\"Essa ação é irreversível\"\n  icon=\"question\"\n  [showCancelButton]=\"true\"\n  [focusCancel]=\"true\"\n  cancelButtonText=\"Cancelar\"\n  cancelButtonColor=\"#2196F3\"\n  confirmButtonText=\"Excluir\"\n  confirmButtonColor=\"#dc3545\"\n  >\n</swal>\n","import { SharedModule } from './../shared/shared.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriaRoutingModule } from './categoria-routing.module';\nimport { CategoriaComponent } from './categoria.component';\nimport { CategoriaFormComponent } from './categoria-form/categoria-form.component';\n\n\n@NgModule({\n  declarations: [\n    CategoriaComponent,\n    CategoriaFormComponent\n  ],\n  imports: [\n    CommonModule,\n    CategoriaRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n  ]\n})\nexport class CategoriaModule { }\n","export class Categoria{\r\n  id: number;\r\n  nome: string;\r\n}\r\n"],"sourceRoot":"webpack:///"}